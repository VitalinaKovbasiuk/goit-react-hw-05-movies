{"version":3,"file":"static/js/519.e6190a24.chunk.js","mappings":"+SAEMA,EAAM,mCACNC,EAAW,gCAOJC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,8ECA5B,UAlCqB,WACnB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBH,GACjBI,MAAK,SAAAhB,GACJW,EAAeX,EAChB,IACAiB,MAAMC,QAAQC,IAClB,GAAE,CAACP,IAECF,EAIL,OACE,8BACGA,EAAYU,OAAS,GACpB,wBACGV,EAAYW,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,sCACU,uBAAID,KACZ,uBAAIC,MAFGnB,EADM,OAQnB,gDAIP,C","sources":["API/Api.jsx","pages/ReviewsMovie/ReviewsMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '406252fd7e7d93d0158a6e1609e77c75';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API/Api';\n\nconst ReviewsMovie = () => {\n  const [reviewMovie, setReviewMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.getMovieReviews(movieId)\n      .then(data => {\n        setReviewMovie(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!reviewMovie) {\n    return;\n  }\n\n  return (\n    <>\n      {reviewMovie.length > 0 ? (\n        <ul>\n          {reviewMovie.map(({ id, author, content }) => (\n            <li key={id}>\n              Author: <b>{author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>Reviews not found</div>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsMovie;"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","useState","reviewMovie","setReviewMovie","movieId","useParams","useEffect","API","then","catch","console","log","length","map","author","content"],"sourceRoot":""}