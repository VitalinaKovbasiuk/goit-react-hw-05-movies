{"version":3,"file":"static/js/62.40c44231.chunk.js","mappings":"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","sources":["API/Api.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MovieSearch/MovieSearch.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '406252fd7e7d93d0158a6e1609e77c75';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n\n    margin-bottom: 25px;\n`;\n\nexport const Item = styled.li`\n     display: block;\n\n    &:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\nexport const Link = styled.a`\n color: #888888;\n\n    &:hover,\n    :focus {\n        color: #000000;\n    }\n`;\n\nexport const List = styled.ul`\n   padding: 0;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Title, List, Item } from './MoviesList.styled'; //list-ul,link-a\n\nconst MoviesList = ({ movies, titlePage = null }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <Title>{titlePage}</Title>}\n\n      <List> \n        {movies.map(({ id, title, name }) => (\n          <Item key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MoviesList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../API/Api';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport Loading from '../../components/Loading/Loading';\n\n\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovie] = useState(null);\n  const [totalRezultMovie, setTotalRezMovie] = useState(null);\n  const [showLoading, setShowLoading] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalRezMovie(null);\n    setShowLoading(true);\n\n    API.getMoviesQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalRezMovie(data.total_results);\n        setShowLoading(false);\n      })\n      .catch(console.log);\n  }, [query]);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n    // form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie name\"\n        />\n\n        <button type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {showLoading && <Loading />}\n      {movies && <MoviesList movies={movies} />}\n\n      {totalRezultMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default MovieSearch;"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","Title","styled","Item","List","movies","titlePage","location","useLocation","map","title","name","to","state","from","useSearchParams","searchParams","setSearchParams","get","useState","setMovie","totalRezultMovie","setTotalRezMovie","showLoading","setShowLoading","inputSearch","setInputSearch","useEffect","API","then","total_results","catch","console","log","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder"],"sourceRoot":""}