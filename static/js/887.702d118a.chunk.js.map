{"version":3,"file":"static/js/887.702d118a.chunk.js","mappings":"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","sources":["API/Api.jsx","components/Addititonal/Addititonal.styled.jsx","components/Addititonal/Addititonal.jsx","components/InfoMovie/InfoMovie.styled.jsx","components/InfoMovie/InfoMovie.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '406252fd7e7d93d0158a6e1609e77c75';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POSTER = 'https://image.tmdb.org/t/p/w500';\nconst URL_BACKDROP = 'https://image.tmdb.org/t/p/original/';\nconst LOGO_URL = `https://image.tmdb.org/t/p/w185`;\n\nexport { KEY, BASE_URL, URL_POSTER, URL_BACKDROP, LOGO_URL };\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\n\nexport const Title = styled.h4`\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled.a`\n  color: #888888;\n\n    &:hover,\n    :focus {\n        color: #000000;\n    }\n`;\n\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Title} from './Addititonal.styled';\n\nconst AdditionalItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst Additional = ({ location }) => {\n  return (\n    <div>\n      <Title>Addititonal information</Title>\n      <ul>\n        {AdditionalItems.map(({ href, text }) => (\n          <Item key={href}>\n            <Link to={href} state={{ from: location }}>\n              {text}\n            </Link>\n          </Item>\n        ))}\n      </ul>\n      <hr />\n    </div>\n  );\n};\n\nAdditionalItems.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    hash: PropTypes.string,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Additional;","import styled from '@emotion/styled';\n\nexport const CardFilm = styled.div`\ndisplay: flex;\n    align-items: center;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { CardFilm } from './InfoMovie.styled';\n\nconst InfoMovie = ({ movie }) => {\n  const {\n    title,\n    name,\n    overview,\n    genres,\n    release_date,\n    first_air_date,\n    poster_path,\n    vote_average,\n  } = movie;\n\n  const userScore = Math.round(vote_average * 10);\n\n  const imgNotFound =\n    'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';\n\n  const imgUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : imgNotFound;\n\n  return (\n    <>\n      <CardFilm>\n        <img\n          src={imgUrl}\n          alt={title || name}\n          width=\"200\"\n          // className={styles.img}\n        />\n        <div>\n          <h2>\n            {title || name} ({(first_air_date || release_date).slice(0, 4)})\n          </h2>\n\n          <p>User Score: {userScore}%</p>\n\n          <h3>Overview</h3>\n          <p>{overview}</p>\n\n          <h3>Genres</h3>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </CardFilm>\n      <hr />\n    </>\n  );\n};\n\nInfoMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n    release_date: PropTypes.string.isRequired,\n    first_air_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default InfoMovie;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n margin-bottom: 10px;\n`;\n\n\nexport const Link = styled.link`\n   display: inline-flex;\n    align-items: center;\n    padding: 3px 10px;\n    background-color: #dddddd;\n    font-size: 14px;\n    color: #515151;\n\n    border-radius: 5px;\n    border: 1px solid #bbbbbb;\n\n    &:hover,\n    :focus {\n        color: #dddddd;\n        background-color: #212121;\n    }\n`;\n\n","import { Link } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Container } from './Button.styled';\n\nconst GoBackButton = ({ backLinkHref }) => {\n  return (\n    <Container>\n      <Link to={backLinkHref}>\n        <BsArrowLeftShort size={20} />\n        Go back\n      </Link>\n    </Container>\n  );\n};\n\nexport default GoBackButton;","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../API/Api';\nimport Additional from '../components/Addititonal/Addititonal';\nimport InfoMovie from '../components/InfoMovie/InfoMovie';\nimport GoBackButton from '../components/Button/Button';\nimport Loading from '../components/Loading/Loading';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    API.getMovieById(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <GoBackButton backLinkHref={backLinkHref} />\n      <InfoMovie movie={movie} />\n      <Additional location={backLinkHref} />\n\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","BASE_URL","getTrandingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","Title","styled","Item","AdditionalItems","href","text","propTypes","location","PropTypes","pathname","search","key","hash","state","isRequired","map","to","from","CardFilm","movie","title","name","overview","genres","release_date","first_air_date","poster_path","vote_average","userScore","Math","round","imgUrl","src","alt","width","slice","join","Container","backLinkHref","size","useState","setMovie","movieId","useParams","useLocation","useEffect","API","then","catch","console","log","Suspense","fallback","Loading"],"sourceRoot":""}